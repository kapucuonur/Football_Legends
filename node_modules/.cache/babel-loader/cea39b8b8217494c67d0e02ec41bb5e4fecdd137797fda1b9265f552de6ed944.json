{"ast":null,"code":"var _jsxFileName = \"/Users/onurkapucu/Documents/Football_Legends/src/components/legends/LegendContainer.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Container, Row } from \"react-bootstrap\"; //!yazım olarak daha kullanışlı ama performans açısından üstteki yöntem daha ideal\n\nimport Form from \"react-bootstrap/Form\";\nimport { data } from \"../../helpers/data\";\nimport LegendCard from \"./LegendCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LegendContainer = () => {\n  _s();\n  //   const [show, setShow] = useState(false);//! Parent componentte tanımladığımızda state 1 tane olmuş oluyor. Tek bir state ile tüm veriyi yönetmeye çalışınca da hata alıyoruz. O yüzden her bir veri için state tanımlamamaız gerekiyor. Bunun için de verileri bir component içerisinde yazdırmış olduk. \n  const [search, setSearch] = useState('');\n  //   console.log(data);\n  const handleChange = e => {\n    console.log(\"first\", e.target.value);\n    setSearch(e.target.value); //!setter metodu her zaman asenkron çalışır.\n    // console.log(search)\n    // if(e.target.value)\n  };\n  console.log(\"second\", search);\n  const filteredData = data.filter(item => item.name.toLowerCase().includes(search.trim().toLowerCase()));\n  console.log(filteredData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search legends...\",\n      onChange: handleChange,\n      className: \"w-50 mx-auto my-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"p-3 rounded-4 card-container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        lg: 3,\n        className: \"justify-content-center g-3\",\n        children: filteredData.map(legend => /*#__PURE__*/_jsxDEV(LegendCard, {\n          legend: legend\n        }, legend.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(LegendContainer, \"P4p43UCblH2cUiARcArwbV223/A=\");\n_c = LegendContainer;\nexport default LegendContainer;\n\n// import { useState } from \"react\";\n// import { Col, Container, Row } from \"react-bootstrap\"; //!yazım olarak daha kullanışlı ama performans açısından üstteki yöntem daha ideal\n// import Card from \"react-bootstrap/Card\";\n// import Form from \"react-bootstrap/Form\";\n// import { data } from \"../../helpers/data\";\n// import LegendCard from \"./LegendCard\";\n\n// const LegendContainer = () => {\n//   const [show, setShow] = useState(false);\n//   console.log(data);\n//   return (\n//     <div>\n//       <Form.Control type=\"search\" placeholder=\"Search legends...\" />\n//       <Container>\n//         <Row xs={1} md={2} lg={3}>\n//           {data.map((legend) => (\n//             // <Col xs={10} sm={8} md={6} lg={4} xl={3}>\n//             // <Col>\n//             //   <Card onClick={() => setShow(!show)}>\n//             //     {!show ? (\n//             //       <Card.Img\n//             //         // onClick={() => setShow(!show)}\n//             //         variant=\"top\"\n//             //         src={legend.img}\n//             //       />\n//             //     ) : (\n//             //       <>\n//             //         {/* <Fragment key=> Fragmentin avantajı key propunu alabilmesi ama boş brakırsak yazamayız */}\n//             //         <Card.Header>\n//             //           <Card.Title>{legend.name}</Card.Title>\n//             //         </Card.Header>\n//             //         <ul className=\"m-auto\">\n//             //           {legend.statistics.map((item) => (\n//             //             <li className=\"list-unstyled h5 text-start\">\n//             //               {\" \"}\n//             //               ⚽ {item}\n//             //             </li>\n//             //           ))}\n//             //         </ul>\n//             //         <span>{legend.official_career}</span>\n//             //       </>\n//             //     )}\n//             //   </Card>\n//             // </Col>\n//             <LegendCard legend={legend}/>\n//           ))}\n//         </Row>\n//       </Container>\n//     </div>\n//   );\n// };\n\n// export default LegendContainer;\nvar _c;\n$RefreshReg$(_c, \"LegendContainer\");","map":{"version":3,"names":["useState","Container","Row","Form","data","LegendCard","jsxDEV","_jsxDEV","LegendContainer","_s","search","setSearch","handleChange","e","console","log","target","value","filteredData","filter","item","name","toLowerCase","includes","trim","children","Control","type","placeholder","onChange","className","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","lg","map","legend","id","_c","$RefreshReg$"],"sources":["/Users/onurkapucu/Documents/Football_Legends/src/components/legends/LegendContainer.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport {  Container, Row } from \"react-bootstrap\"; //!yazım olarak daha kullanışlı ama performans açısından üstteki yöntem daha ideal\n\nimport Form from \"react-bootstrap/Form\";\nimport { data } from \"../../helpers/data\";\nimport LegendCard from \"./LegendCard\";\n\nconst LegendContainer = () => {\n//   const [show, setShow] = useState(false);//! Parent componentte tanımladığımızda state 1 tane olmuş oluyor. Tek bir state ile tüm veriyi yönetmeye çalışınca da hata alıyoruz. O yüzden her bir veri için state tanımlamamaız gerekiyor. Bunun için de verileri bir component içerisinde yazdırmış olduk. \n    const [search,setSearch] = useState('');\n//   console.log(data);\n  const handleChange = (e) => {\n    console.log(\"first\",e.target.value)\n    setSearch(e.target.value); //!setter metodu her zaman asenkron çalışır.\n    // console.log(search)\n    // if(e.target.value)\n  }\n  console.log(\"second\",search)\n\n  const filteredData = data.filter(item=> item.name.toLowerCase().includes(search.trim().toLowerCase()));\n  console.log(filteredData)\n  return (\n    <div>\n      <Form.Control type=\"search\" placeholder=\"Search legends...\" onChange={handleChange} className=\"w-50 mx-auto my-2\" />\n      <Container className=\"p-3 rounded-4 card-container my-3\">\n        <Row xs={1} md={2} lg={3} className=\"justify-content-center g-3\">\n          {filteredData.map((legend) => (\n            <LegendCard key={legend.id} legend={legend}/>\n          ))}\n          {/**Diğer props gönderme yöntemleri */}\n          {/* {filteredData.map((legend) => (\n            <LegendCard key={legend.id} {...legend}/> //* {name,img,statistics,official_career}\n          ))} */}\n          {/* {filteredData.map((legend) => (\n            <LegendCard key={legend.id} name={legend.name} img={legend.img} statistics={legend.statistics} official_career={legend.official_career} /> //* {name,img,statistics,official_career}\n          ))} */}\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default LegendContainer;\n\n\n// import { useState } from \"react\";\n// import { Col, Container, Row } from \"react-bootstrap\"; //!yazım olarak daha kullanışlı ama performans açısından üstteki yöntem daha ideal\n// import Card from \"react-bootstrap/Card\";\n// import Form from \"react-bootstrap/Form\";\n// import { data } from \"../../helpers/data\";\n// import LegendCard from \"./LegendCard\";\n\n// const LegendContainer = () => {\n//   const [show, setShow] = useState(false);\n//   console.log(data);\n//   return (\n//     <div>\n//       <Form.Control type=\"search\" placeholder=\"Search legends...\" />\n//       <Container>\n//         <Row xs={1} md={2} lg={3}>\n//           {data.map((legend) => (\n//             // <Col xs={10} sm={8} md={6} lg={4} xl={3}>\n//             // <Col>\n//             //   <Card onClick={() => setShow(!show)}>\n//             //     {!show ? (\n//             //       <Card.Img\n//             //         // onClick={() => setShow(!show)}\n//             //         variant=\"top\"\n//             //         src={legend.img}\n//             //       />\n//             //     ) : (\n//             //       <>\n//             //         {/* <Fragment key=> Fragmentin avantajı key propunu alabilmesi ama boş brakırsak yazamayız */}\n//             //         <Card.Header>\n//             //           <Card.Title>{legend.name}</Card.Title>\n//             //         </Card.Header>\n//             //         <ul className=\"m-auto\">\n//             //           {legend.statistics.map((item) => (\n//             //             <li className=\"list-unstyled h5 text-start\">\n//             //               {\" \"}\n//             //               ⚽ {item}\n//             //             </li>\n//             //           ))}\n//             //         </ul>\n//             //         <span>{legend.official_career}</span>\n//             //       </>\n//             //     )}\n//             //   </Card>\n//             // </Col>\n//             <LegendCard legend={legend}/>\n//           ))}\n//         </Row>\n//       </Container>\n//     </div>\n//   );\n// };\n\n// export default LegendContainer;\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAAUC,SAAS,EAAEC,GAAG,QAAQ,iBAAiB,CAAC,CAAC;;AAEnD,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,IAAI,QAAQ,oBAAoB;AACzC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B;EACI,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC3C;EACE,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IACnCN,SAAS,CAACE,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC3B;IACA;EACF,CAAC;EACDH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACL,MAAM,CAAC;EAE5B,MAAMQ,YAAY,GAAGd,IAAI,CAACe,MAAM,CAACC,IAAI,IAAGA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACb,MAAM,CAACc,IAAI,CAAC,CAAC,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC;EACtGR,OAAO,CAACC,GAAG,CAACG,YAAY,CAAC;EACzB,oBACEX,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACJ,IAAI,CAACuB,OAAO;MAACC,IAAI,EAAC,QAAQ;MAACC,WAAW,EAAC,mBAAmB;MAACC,QAAQ,EAAEjB,YAAa;MAACkB,SAAS,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpH3B,OAAA,CAACN,SAAS;MAAC6B,SAAS,EAAC,mCAAmC;MAAAL,QAAA,eACtDlB,OAAA,CAACL,GAAG;QAACiC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACP,SAAS,EAAC,4BAA4B;QAAAL,QAAA,EAC7DP,YAAY,CAACoB,GAAG,CAAEC,MAAM,iBACvBhC,OAAA,CAACF,UAAU;UAAiBkC,MAAM,EAAEA;QAAO,GAA1BA,MAAM,CAACC,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACzB,EAAA,CAjCID,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AAmCrB,eAAeA,eAAe;;AAG9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}