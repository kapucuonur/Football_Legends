{"ast":null,"code":"import{useState}from\"react\";import{Container,Row}from\"react-bootstrap\";//!yazım olarak daha kullanışlı ama performans açısından üstteki yöntem daha ideal\nimport Form from\"react-bootstrap/Form\";import{data}from\"../../helpers/data\";import LegendCard from\"./LegendCard\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LegendContainer=()=>{//   const [show, setShow] = useState(false);//! Parent componentte tanımladığımızda state 1 tane olmuş oluyor. Tek bir state ile tüm veriyi yönetmeye çalışınca da hata alıyoruz. O yüzden her bir veri için state tanımlamamaız gerekiyor. Bunun için de verileri bir component içerisinde yazdırmış olduk. \nconst[search,setSearch]=useState('');//   console.log(data);\nconst handleChange=e=>{console.log(\"first\",e.target.value);setSearch(e.target.value);//!setter metodu her zaman asenkron çalışır.\n// console.log(search)\n// if(e.target.value)\n};console.log(\"second\",search);const filteredData=data.filter(item=>item.name.toLowerCase().includes(search.trim().toLowerCase()));console.log(filteredData);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Form.Control,{type:\"search\",placeholder:\"Search legends...\",onChange:handleChange,className:\"w-50 mx-auto my-2\"}),/*#__PURE__*/_jsx(Container,{className:\"p-3 rounded-4 card-container my-3\",children:/*#__PURE__*/_jsx(Row,{xs:1,md:2,lg:3,className:\"justify-content-center g-3\",children:filteredData.map(legend=>/*#__PURE__*/_jsx(LegendCard,{legend:legend},legend.id))})})]});};export default LegendContainer;// import { useState } from \"react\";\n// import { Col, Container, Row } from \"react-bootstrap\"; //!yazım olarak daha kullanışlı ama performans açısından üstteki yöntem daha ideal\n// import Card from \"react-bootstrap/Card\";\n// import Form from \"react-bootstrap/Form\";\n// import { data } from \"../../helpers/data\";\n// import LegendCard from \"./LegendCard\";\n// const LegendContainer = () => {\n//   const [show, setShow] = useState(false);\n//   console.log(data);\n//   return (\n//     <div>\n//       <Form.Control type=\"search\" placeholder=\"Search legends...\" />\n//       <Container>\n//         <Row xs={1} md={2} lg={3}>\n//           {data.map((legend) => (\n//             // <Col xs={10} sm={8} md={6} lg={4} xl={3}>\n//             // <Col>\n//             //   <Card onClick={() => setShow(!show)}>\n//             //     {!show ? (\n//             //       <Card.Img\n//             //         // onClick={() => setShow(!show)}\n//             //         variant=\"top\"\n//             //         src={legend.img}\n//             //       />\n//             //     ) : (\n//             //       <>\n//             //         {/* <Fragment key=> Fragmentin avantajı key propunu alabilmesi ama boş brakırsak yazamayız */}\n//             //         <Card.Header>\n//             //           <Card.Title>{legend.name}</Card.Title>\n//             //         </Card.Header>\n//             //         <ul className=\"m-auto\">\n//             //           {legend.statistics.map((item) => (\n//             //             <li className=\"list-unstyled h5 text-start\">\n//             //               {\" \"}\n//             //               ⚽ {item}\n//             //             </li>\n//             //           ))}\n//             //         </ul>\n//             //         <span>{legend.official_career}</span>\n//             //       </>\n//             //     )}\n//             //   </Card>\n//             // </Col>\n//             <LegendCard legend={legend}/>\n//           ))}\n//         </Row>\n//       </Container>\n//     </div>\n//   );\n// };\n// export default LegendContainer;","map":{"version":3,"names":["useState","Container","Row","Form","data","LegendCard","jsx","_jsx","jsxs","_jsxs","LegendContainer","search","setSearch","handleChange","e","console","log","target","value","filteredData","filter","item","name","toLowerCase","includes","trim","children","Control","type","placeholder","onChange","className","xs","md","lg","map","legend","id"],"sources":["/Users/onurkapucu/Documents/Football_Legends/src/components/legends/LegendContainer.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport {  Container, Row } from \"react-bootstrap\"; //!yazım olarak daha kullanışlı ama performans açısından üstteki yöntem daha ideal\n\nimport Form from \"react-bootstrap/Form\";\nimport { data } from \"../../helpers/data\";\nimport LegendCard from \"./LegendCard\";\n\nconst LegendContainer = () => {\n//   const [show, setShow] = useState(false);//! Parent componentte tanımladığımızda state 1 tane olmuş oluyor. Tek bir state ile tüm veriyi yönetmeye çalışınca da hata alıyoruz. O yüzden her bir veri için state tanımlamamaız gerekiyor. Bunun için de verileri bir component içerisinde yazdırmış olduk. \n    const [search,setSearch] = useState('');\n//   console.log(data);\n  const handleChange = (e) => {\n    console.log(\"first\",e.target.value)\n    setSearch(e.target.value); //!setter metodu her zaman asenkron çalışır.\n    // console.log(search)\n    // if(e.target.value)\n  }\n  console.log(\"second\",search)\n\n  const filteredData = data.filter(item=> item.name.toLowerCase().includes(search.trim().toLowerCase()));\n  console.log(filteredData)\n  return (\n    <div>\n      <Form.Control type=\"search\" placeholder=\"Search legends...\" onChange={handleChange} className=\"w-50 mx-auto my-2\" />\n      <Container className=\"p-3 rounded-4 card-container my-3\">\n        <Row xs={1} md={2} lg={3} className=\"justify-content-center g-3\">\n          {filteredData.map((legend) => (\n            <LegendCard key={legend.id} legend={legend}/>\n          ))}\n          {/**Diğer props gönderme yöntemleri */}\n          {/* {filteredData.map((legend) => (\n            <LegendCard key={legend.id} {...legend}/> //* {name,img,statistics,official_career}\n          ))} */}\n          {/* {filteredData.map((legend) => (\n            <LegendCard key={legend.id} name={legend.name} img={legend.img} statistics={legend.statistics} official_career={legend.official_career} /> //* {name,img,statistics,official_career}\n          ))} */}\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default LegendContainer;\n\n\n// import { useState } from \"react\";\n// import { Col, Container, Row } from \"react-bootstrap\"; //!yazım olarak daha kullanışlı ama performans açısından üstteki yöntem daha ideal\n// import Card from \"react-bootstrap/Card\";\n// import Form from \"react-bootstrap/Form\";\n// import { data } from \"../../helpers/data\";\n// import LegendCard from \"./LegendCard\";\n\n// const LegendContainer = () => {\n//   const [show, setShow] = useState(false);\n//   console.log(data);\n//   return (\n//     <div>\n//       <Form.Control type=\"search\" placeholder=\"Search legends...\" />\n//       <Container>\n//         <Row xs={1} md={2} lg={3}>\n//           {data.map((legend) => (\n//             // <Col xs={10} sm={8} md={6} lg={4} xl={3}>\n//             // <Col>\n//             //   <Card onClick={() => setShow(!show)}>\n//             //     {!show ? (\n//             //       <Card.Img\n//             //         // onClick={() => setShow(!show)}\n//             //         variant=\"top\"\n//             //         src={legend.img}\n//             //       />\n//             //     ) : (\n//             //       <>\n//             //         {/* <Fragment key=> Fragmentin avantajı key propunu alabilmesi ama boş brakırsak yazamayız */}\n//             //         <Card.Header>\n//             //           <Card.Title>{legend.name}</Card.Title>\n//             //         </Card.Header>\n//             //         <ul className=\"m-auto\">\n//             //           {legend.statistics.map((item) => (\n//             //             <li className=\"list-unstyled h5 text-start\">\n//             //               {\" \"}\n//             //               ⚽ {item}\n//             //             </li>\n//             //           ))}\n//             //         </ul>\n//             //         <span>{legend.official_career}</span>\n//             //       </>\n//             //     )}\n//             //   </Card>\n//             // </Col>\n//             <LegendCard legend={legend}/>\n//           ))}\n//         </Row>\n//       </Container>\n//     </div>\n//   );\n// };\n\n// export default LegendContainer;\n\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAAUC,SAAS,CAAEC,GAAG,KAAQ,iBAAiB,CAAE;AAEnD,MAAO,CAAAC,IAAI,KAAM,sBAAsB,CACvC,OAASC,IAAI,KAAQ,oBAAoB,CACzC,MAAO,CAAAC,UAAU,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC9B;AACI,KAAM,CAACC,MAAM,CAACC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC3C;AACE,KAAM,CAAAa,YAAY,CAAIC,CAAC,EAAK,CAC1BC,OAAO,CAACC,GAAG,CAAC,OAAO,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CACnCN,SAAS,CAACE,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAE;AAC3B;AACA;AACF,CAAC,CACDH,OAAO,CAACC,GAAG,CAAC,QAAQ,CAACL,MAAM,CAAC,CAE5B,KAAM,CAAAQ,YAAY,CAAGf,IAAI,CAACgB,MAAM,CAACC,IAAI,EAAGA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACb,MAAM,CAACc,IAAI,CAAC,CAAC,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC,CACtGR,OAAO,CAACC,GAAG,CAACG,YAAY,CAAC,CACzB,mBACEV,KAAA,QAAAiB,QAAA,eACEnB,IAAA,CAACJ,IAAI,CAACwB,OAAO,EAACC,IAAI,CAAC,QAAQ,CAACC,WAAW,CAAC,mBAAmB,CAACC,QAAQ,CAAEjB,YAAa,CAACkB,SAAS,CAAC,mBAAmB,CAAE,CAAC,cACpHxB,IAAA,CAACN,SAAS,EAAC8B,SAAS,CAAC,mCAAmC,CAAAL,QAAA,cACtDnB,IAAA,CAACL,GAAG,EAAC8B,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAACH,SAAS,CAAC,4BAA4B,CAAAL,QAAA,CAC7DP,YAAY,CAACgB,GAAG,CAAEC,MAAM,eACvB7B,IAAA,CAACF,UAAU,EAAiB+B,MAAM,CAAEA,MAAO,EAA1BA,MAAM,CAACC,EAAoB,CAC7C,CAAC,CAQC,CAAC,CACG,CAAC,EACT,CAAC,CAEV,CAAC,CAED,cAAe,CAAA3B,eAAe,CAG9B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}